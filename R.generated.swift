//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 color palettes.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 0 files.
  struct file {
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 2 images.
  struct image {
    /// Image `book_icon`.
    static let book_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: Constants.tabBarImageBook)
    /// Image `user_icon`.
    static let user_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: Constants.tabBarImageUser)
    
    /// `UIImage(named: "book_icon", bundle: ..., traitCollection: ...)`
    static func book_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.book_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "user_icon", bundle: ..., traitCollection: ...)`
    static func user_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.user_icon, compatibleWith: traitCollection)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 0 nibs.
  struct nib {
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 0 reuse identifiers.
  struct reuseIdentifier {
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
  struct segue {
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 2 storyboards.
  
  /// This `R.string` struct is generated, and contains static references to 3 localization tables.
  struct string {
    /// This `R.string.launchScreen` struct is generated, and contains static references to 0 localization keys.
    struct launchScreen {
      fileprivate init() {}
    }
    
    /// This `R.string.localizable` struct is generated, and contains static references to 19 localization keys.
    struct localizable {
      /// Base translation: 
      /// 
      /// Locales: ja, Base
      static let buttonTitleNil = Rswift.StringResource(key: "buttonTitleNil", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Add
      /// 
      /// Locales: ja, Base
      static let buttonTitleAdd = Rswift.StringResource(key: "buttonTitleAdd", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Add Book
      /// 
      /// Locales: ja, Base
      static let addBookTitle = Rswift.StringResource(key: "addBookTitle", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Back
      /// 
      /// Locales: ja, Base
      static let buttonTitleBack = Rswift.StringResource(key: "buttonTitleBack", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Book
      /// 
      /// Locales: ja, Base
      static let labelTitleBook = Rswift.StringResource(key: "labelTitleBook", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Book List
      /// 
      /// Locales: ja, Base
      static let bookListTitle = Rswift.StringResource(key: "bookListTitle", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Close
      /// 
      /// Locales: ja, Base
      static let buttonTitleClose = Rswift.StringResource(key: "buttonTitleClose", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Comfirm
      /// 
      /// Locales: ja, Base
      static let labelTitleConfPass = Rswift.StringResource(key: "labelTitleConfPass", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Config Account
      /// 
      /// Locales: ja, Base
      static let accountConfigTitle = Rswift.StringResource(key: "accountConfigTitle", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Configuration
      /// 
      /// Locales: ja, Base
      static let buttonTitleConfig = Rswift.StringResource(key: "buttonTitleConfig", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Edit Book
      /// 
      /// Locales: ja, Base
      static let editBookTitle = Rswift.StringResource(key: "editBookTitle", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Email
      /// 
      /// Locales: ja, Base
      static let labelTitleEmail = Rswift.StringResource(key: "labelTitleEmail", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Load More
      /// 
      /// Locales: ja, Base
      static let buttonTitleLoadMore = Rswift.StringResource(key: "buttonTitleLoadMore", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Login
      /// 
      /// Locales: ja, Base
      static let buttonTitleLogin = Rswift.StringResource(key: "buttonTitleLogin", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Password
      /// 
      /// Locales: ja, Base
      static let labelTitlePassword = Rswift.StringResource(key: "labelTitlePassword", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Price
      /// 
      /// Locales: ja, Base
      static let labelTitlePrice = Rswift.StringResource(key: "labelTitlePrice", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Purchase Date
      /// 
      /// Locales: ja, Base
      static let labelTitlePurchaseDate = Rswift.StringResource(key: "labelTitlePurchaseDate", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Save
      /// 
      /// Locales: ja, Base
      static let buttonTitleSave = Rswift.StringResource(key: "buttonTitleSave", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      /// Base translation: Set Image
      /// 
      /// Locales: ja, Base
      static let buttonTitleSetImage = Rswift.StringResource(key: "buttonTitleSetImage", tableName: "Localizable", bundle: R.hostingBundle, locales: ["ja", "Base"], comment: nil)
      
      /// Base translation: 
      /// 
      /// Locales: ja, Base
      static func buttonTitleNil(_: Void = ()) -> String {
        return NSLocalizedString("buttonTitleNil", bundle: R.hostingBundle, value: "", comment: "")
      }
      
      /// Base translation: Add
      /// 
      /// Locales: ja, Base
      static func buttonTitleAdd(_: Void = ()) -> String {
        return NSLocalizedString("buttonTitleAdd", bundle: R.hostingBundle, value: "Add", comment: "")
      }
      
      /// Base translation: Add Book
      /// 
      /// Locales: ja, Base
      static func addBookTitle(_: Void = ()) -> String {
        return NSLocalizedString("addBookTitle", bundle: R.hostingBundle, value: "Add Book", comment: "")
      }
      
      /// Base translation: Back
      /// 
      /// Locales: ja, Base
      static func buttonTitleBack(_: Void = ()) -> String {
        return NSLocalizedString("buttonTitleBack", bundle: R.hostingBundle, value: "Back", comment: "")
      }
      
      /// Base translation: Book
      /// 
      /// Locales: ja, Base
      static func labelTitleBook(_: Void = ()) -> String {
        return NSLocalizedString("labelTitleBook", bundle: R.hostingBundle, value: "Book", comment: "")
      }
      
      /// Base translation: Book List
      /// 
      /// Locales: ja, Base
      static func bookListTitle(_: Void = ()) -> String {
        return NSLocalizedString("bookListTitle", bundle: R.hostingBundle, value: "Book List", comment: "")
      }
      
      /// Base translation: Close
      /// 
      /// Locales: ja, Base
      static func buttonTitleClose(_: Void = ()) -> String {
        return NSLocalizedString("buttonTitleClose", bundle: R.hostingBundle, value: "Close", comment: "")
      }
      
      /// Base translation: Comfirm
      /// 
      /// Locales: ja, Base
      static func labelTitleConfPass(_: Void = ()) -> String {
        return NSLocalizedString("labelTitleConfPass", bundle: R.hostingBundle, value: "Comfirm", comment: "")
      }
      
      /// Base translation: Config Account
      /// 
      /// Locales: ja, Base
      static func accountConfigTitle(_: Void = ()) -> String {
        return NSLocalizedString("accountConfigTitle", bundle: R.hostingBundle, value: "Config Account", comment: "")
      }
      
      /// Base translation: Configuration
      /// 
      /// Locales: ja, Base
      static func buttonTitleConfig(_: Void = ()) -> String {
        return NSLocalizedString("buttonTitleConfig", bundle: R.hostingBundle, value: "Configuration", comment: "")
      }
      
      /// Base translation: Edit Book
      /// 
      /// Locales: ja, Base
      static func editBookTitle(_: Void = ()) -> String {
        return NSLocalizedString("editBookTitle", bundle: R.hostingBundle, value: "Edit Book", comment: "")
      }
      
      /// Base translation: Email
      /// 
      /// Locales: ja, Base
      static func labelTitleEmail(_: Void = ()) -> String {
        return NSLocalizedString("labelTitleEmail", bundle: R.hostingBundle, value: "Email", comment: "")
      }
      
      /// Base translation: Load More
      /// 
      /// Locales: ja, Base
      static func buttonTitleLoadMore(_: Void = ()) -> String {
        return NSLocalizedString("buttonTitleLoadMore", bundle: R.hostingBundle, value: "Load More", comment: "")
      }
      
      /// Base translation: Login
      /// 
      /// Locales: ja, Base
      static func buttonTitleLogin(_: Void = ()) -> String {
        return NSLocalizedString("buttonTitleLogin", bundle: R.hostingBundle, value: "Login", comment: "")
      }
      
      /// Base translation: Password
      /// 
      /// Locales: ja, Base
      static func labelTitlePassword(_: Void = ()) -> String {
        return NSLocalizedString("labelTitlePassword", bundle: R.hostingBundle, value: "Password", comment: "")
      }
      
      /// Base translation: Price
      /// 
      /// Locales: ja, Base
      static func labelTitlePrice(_: Void = ()) -> String {
        return NSLocalizedString("labelTitlePrice", bundle: R.hostingBundle, value: "Price", comment: "")
      }
      
      /// Base translation: Purchase Date
      /// 
      /// Locales: ja, Base
      static func labelTitlePurchaseDate(_: Void = ()) -> String {
        return NSLocalizedString("labelTitlePurchaseDate", bundle: R.hostingBundle, value: "Purchase Date", comment: "")
      }
      
      /// Base translation: Save
      /// 
      /// Locales: ja, Base
      static func buttonTitleSave(_: Void = ()) -> String {
        return NSLocalizedString("buttonTitleSave", bundle: R.hostingBundle, value: "Save", comment: "")
      }
      
      /// Base translation: Set Image
      /// 
      /// Locales: ja, Base
      static func buttonTitleSetImage(_: Void = ()) -> String {
        return NSLocalizedString("buttonTitleSetImage", bundle: R.hostingBundle, value: "Set Image", comment: "")
      }
      
      fileprivate init() {}
    }
    
    /// This `R.string.main` struct is generated, and contains static references to 0 localization keys.
    struct main {
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      // There are no resources to validate
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R {
  struct nib {
    fileprivate init() {}
  }
  
  fileprivate init() {}
}
